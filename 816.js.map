{"version":3,"file":"816.js","mappings":"gQAWIA,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,ECvBpD,SAASC,IACtB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,cAC9BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAEnCK,EAAAA,EAAAA,YAAU,KACRC,UAAUC,cAAcC,iBAAiB,WAAW,SAAUC,GAE5D,IAAIC,EAAWD,EAAME,KAAKC,OAC1BR,GAAUD,IAAK,IACVA,EAEH,CAACO,GAAY,UAASA,WAAkBD,EAAME,KAAKE,mBAGtD,IAEH,MAAMC,GAAmBC,EAAAA,EAAAA,cAAaC,IACpC,MAAQC,MAAOhB,GAASe,EAAEE,OAC1BhB,EAAQD,KACP,IAEGkB,GAAoBJ,EAAAA,EAAAA,cAAY,KACpCb,EAAQ,IACHI,UAAUC,cAAca,WAK7Bd,UAAUC,cAAca,WAAWC,YAAYpB,GAJ7CF,EAAU,0BAKX,CAACE,IAEEqB,GAAgBP,EAAAA,EAAAA,cACnBC,GACW,UAAVA,EAAEO,MACDP,EAAEQ,WACFR,EAAES,iBAAkBN,MACvB,CAACA,IAGGO,GAAWC,EAAAA,EAAAA,UAAQ,IAAMC,OAAOC,OAAO1B,IAAQ,CAACA,IAEtD,OACE,2BAAS2B,UAAWC,EAAAA,SAClB,kCACA,wKAKA,wBAAMC,GAAG,UAAUlC,GACnB,uBAAKkC,GAAG,YACLN,EAASO,KAAI,CAACC,EAAMX,IACnB,uBAAKA,IAAKA,GAAMW,MAGpB,yBACEjB,MAAOhB,EACPkC,SAAUrB,EACVsB,UAAWd,IAEb,0BAAQe,QAASlB,EAAmBmB,UAAWrC,EAAKsC,QAAO,W,8DC7D7DC,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOV,GAAI,8FAA+F,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,+CAA+C,MAAQ,GAAG,SAAW,kDAAkD,eAAiB,CAAC,4GAA4G,WAAa,MAEraQ,EAAwBG,OAAS,CAChC,QAAW,wBAEZ","sources":["webpack://@dev/web/./src/containers/Post.module.scss?dcf4","webpack://@dev/web/./src/containers/Post.tsx","webpack://@dev/web/./src/containers/Post.module.scss"],"sourcesContent":["\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./Post.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./Post.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styles from \"./Post.module.scss\";\n\nexport default function Section() {\n  const [status, setStatus] = useState(\"supported\");\n  const [text, setText] = useState(\"\");\n  const [inbox, setInbox] = useState({});\n\n  useEffect(() => {\n    navigator.serviceWorker.addEventListener(\"message\", function (event) {\n      // A message has been received, now show the message on the page.\n      var clientId = event.data.client;\n      setInbox((inbox) => ({\n        ...inbox,\n        // A message from this client hasnâ€™t been received before, so we need to setup a place to show its messages.\n        [clientId]: `Client ${clientId} says: ${event.data.message}`,\n      }));\n    });\n  }, []);\n\n  const handleChangeText = useCallback((e) => {\n    const { value: text } = e.target;\n    setText(text);\n  }, []);\n\n  const handleSendMessage = useCallback(() => {\n    setText(\"\");\n    if (!navigator.serviceWorker.controller) {\n      setStatus(\"error: no controller\");\n      return;\n    }\n    // Send the message to the service worker.\n    navigator.serviceWorker.controller.postMessage(text);\n  }, [text]);\n\n  const handleKeyDown = useCallback(\n    (e) =>\n      e.key === \"Enter\" &&\n      !e.shiftKey &&\n      (e.preventDefault(), handleSendMessage()),\n    [handleSendMessage]\n  );\n\n  const received = useMemo(() => Object.values(inbox), [inbox]);\n\n  return (\n    <section className={styles.Section}>\n      <h2>Send</h2>\n      <p>\n        Open another window with this page and type some text in below to\n        postMessage it to the ServiceWorker which will forward the message\n        along.\n      </p>\n      <span id=\"status\">{status}</span>\n      <div id=\"received\">\n        {received.map((line, key) => (\n          <div key={key}>{line}</div>\n        ))}\n      </div>\n      <input\n        value={text}\n        onChange={handleChangeText}\n        onKeyDown={handleKeyDown}\n      />\n      <button onClick={handleSendMessage} disabled={!text.length}>\n        send\n      </button>\n    </section>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".OEk5fllzj8Qe7oP_RcOJ{color:blue;font-family:monospace;font-size:1rem;white-space:pre-wrap}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Post.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,UAAA,CACA,qBAAA,CACA,cAAA,CACA,oBAAA\",\"sourcesContent\":[\".Section {\\n  color: blue;\\n  font-family: monospace;\\n  font-size: 1rem;\\n  white-space: pre-wrap;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"OEk5fllzj8Qe7oP_RcOJ\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","Section","status","setStatus","useState","text","setText","inbox","setInbox","useEffect","navigator","serviceWorker","addEventListener","event","clientId","data","client","message","handleChangeText","useCallback","e","value","target","handleSendMessage","controller","postMessage","handleKeyDown","key","shiftKey","preventDefault","received","useMemo","Object","values","className","styles","id","map","line","onChange","onKeyDown","onClick","disabled","length","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}